/*
    app.js
    code for our demo application
 */

"use strict";


angular.module('ToDoApp', [])
    .config(function($httpProvider) {
        //Parse required two extra headers sent with every HTTP request: X-Parse-Application-Id, X-Parse-REST-API-Key
        //the first needs to be set to your application's ID value
        //the second needs to be set to your application's REST API key
        //both of these are generated by Parse when you create your application via their web site
        //the following lines will add these as default headers so that they are sent with every
        //HTTP request we make in this application
        $httpProvider.defaults.headers.common['X-Parse-Application-Id'] = 'FAi9H2kHCrb8qnVQmN9gzMPrsVXGi9hDaGN1WcCV';
        $httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = 'zmOC8JZEgown0y6CeWUarQ2pHyiyUqsRJApuOgA2';
    })
    .controller('TasksController', function($scope, $http) {
        //this is the base URL for all task objects managed by your application
        //requesting this with a GET will get all tasks objects
        //sending a POST to this will insert a new task object
        //sending a PUT to this URL + '/' + task.objectId will update an existing task
        //sending a DELETE to this URL + '/' + task.objectId will delete an existing task
        var tasksUrl = 'https://api.parse.com/1/classes/tasks';

        $scope.refreshTasks = function() {
            //get all tasks
            $scope.loading = true;
            $http.get(tasksUrl + '?where={"done": false}')
                .success(function(responseData) {
                    //when returning a list of data, Parse will always return an
                    //object with one property called 'results', which will contain an
                    //array containing all the data objects
                    $scope.tasks = responseData.results;
                })
                .error(function(err) {
                    console.log(err);
                    //notify user in some way
                })
                .finally(function() {
                    $scope.loading = false;
                });
        }; //$scope.refreshTasks()

        //call refreshTasks() to get the initial set of tasks on page load
        $scope.refreshTasks();

        //initialize a new task object on the scope for the new task form
        $scope.newTask = {done: false};

        //function to add a new task to the list
        $scope.addTask = function(task) {
            $scope.inserting = true;
            $http.post(tasksUrl, task)
                .success(function(responseData) {
                    //Parse will return the new objectId in the response data
                    //copy that to the task we just inserted
                    task.objectId = responseData.objectId;

                    //and add that task to our task list
                    $scope.tasks.push(task);

                    //reset newTask to clear the form
                    $scope.newTask = {done: false};
                })
                .error(function(err) {
                    console.log(err);
                    //report to user in some way
                })
                .finally(function() {
                    $scope.inserting = false;
                });
        };

        //function to update an existing task
        $scope.updateTask = function(task) {
            $scope.updating = true;
            $http.put(tasksUrl + '/' + task.objectId, task)
                .success(function(responseData) {
                    //nothing we really need to do since local object is already up-to-date
                })
                .error(function(err) {
                    console.log(err);
                    //notify user in some way
                })
                .finally(function() {
                    $scope.updating = false;
                });
        };

    });
